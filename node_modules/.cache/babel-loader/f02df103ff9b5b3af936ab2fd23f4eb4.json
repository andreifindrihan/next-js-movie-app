{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore } from 'redux';\nvar initialState = {\n  movies: [],\n  shows: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_MOVIES\":\n      return _objectSpread({}, state, {\n        movies: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; // const reducer = (state = { foo: '' }, action) => {\n//     switch (action.type) {\n//         case 'FOO':\n//             return { ...state, foo: action.payload };\n//         default:\n//             return state\n//     }\n// };\n\n\nvar store = function store(initialState) {\n  return createStore(reducer, initialState);\n};\n\nexport default store;","map":{"version":3,"sources":["/Users/andreifindrihan/FrontEnd/Next-JS-App/store/store.js"],"names":["createStore","initialState","movies","shows","reducer","state","action","type","payload","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AACI,+BACOF,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFnB;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACR,YAAD,EAAkB;AAC5B,SAAOD,WAAW,CAACI,OAAD,EAAUH,YAAV,CAAlB;AACH,CAFD;;AAIA,eAAeQ,KAAf","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n    movies: [],\n    shows: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_MOVIES\":\n            return {\n                ...state,\n                movies: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n// const reducer = (state = { foo: '' }, action) => {\n//     switch (action.type) {\n//         case 'FOO':\n//             return { ...state, foo: action.payload };\n//         default:\n//             return state\n//     }\n// };\n\nconst store = (initialState) => {\n    return createStore(reducer, initialState);\n};\n\nexport default store;"]},"metadata":{},"sourceType":"module"}