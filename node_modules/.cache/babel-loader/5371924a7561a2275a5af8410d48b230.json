{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/andreifindrihan/FrontEnd/Next-JS-App/pages/shows.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport { API_KEY } from '../API_KEY';\nimport Movies from './movies';\n\nvar Shows = function Shows(props) {\n  var _show = show,\n      id = _show.id,\n      original_name = _show.original_name,\n      overview = _show.overview,\n      backdrop_path = _show.backdrop_path;\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-959600674\" + \" \" + \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"TV Shows List!\"), React.createElement(\"div\", {\n    className: \"jsx-959600674\" + \" \" + \"grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.showInfo.map(function (show) {\n    return React.createElement(\"div\", {\n      key: id,\n      className: \"jsx-959600674\" + \" \" + \"card mb-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"jsx-959600674\" + \" \" + \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, original_name.length > 18 ? original_name.substring(0, 18) + '...' : original_name), React.createElement(\"div\", {\n      className: \"jsx-959600674\" + \" \" + \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"jsx-959600674\" + \" \" + \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, overview.length > 300 ? overview.substring(0, 300) + '...' : overview)), React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/original/\".concat(backdrop_path),\n      alt: \"Card image\",\n      className: \"jsx-959600674\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  })), React.createElement(_JSXStyle, {\n    id: \"959600674\",\n    __self: this\n  }, \"h1.jsx-959600674{margin:20px auto;}.grid.jsx-959600674{display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:15px;}.card.jsx-959600674 img.jsx-959600674{height:200px;width:100%;display:block;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZWlmaW5kcmloYW4vRnJvbnRFbmQvTmV4dC1KUy1BcHAvcGFnZXMvc2hvd3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUJ3QixBQUdzQyxBQUdKLEFBS0EsYUFKcUIsQUFLdkIsSUFSZixPQVNrQixjQUNsQixTQU5rQixjQUNsQiIsImZpbGUiOiIvVXNlcnMvYW5kcmVpZmluZHJpaGFuL0Zyb250RW5kL05leHQtSlMtQXBwL3BhZ2VzL3Nob3dzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCB7IEFQSV9LRVkgfSBmcm9tICcuLi9BUElfS0VZJztcbmltcG9ydCBNb3ZpZXMgZnJvbSAnLi9tb3ZpZXMnO1xuXG5jb25zdCBTaG93cyA9IHByb3BzID0+IHtcbiAgICBjb25zdCB7IGlkLCBvcmlnaW5hbF9uYW1lLCBvdmVydmlldywgYmFja2Ryb3BfcGF0aCB9ID0gc2hvd1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5UViBTaG93cyBMaXN0ITwvaDE+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWRcIj5cbiAgICAgICAgICAgICAgICB7cHJvcHMuc2hvd0luZm8ubWFwKHNob3cgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aWR9IGNsYXNzTmFtZT1cImNhcmQgbWItMyB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+e29yaWdpbmFsX25hbWUubGVuZ3RoID4gMTggPyBvcmlnaW5hbF9uYW1lLnN1YnN0cmluZygwLCAxOCkgKyAnLi4uJyA6IG9yaWdpbmFsX25hbWV9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzTmFtZT1cImNhcmQtc3VidGl0bGUgdGV4dC1tdXRlZFwiPntvdmVydmlldy5sZW5ndGggPiAzMDAgPyBvdmVydmlldy5zdWJzdHJpbmcoMCwgMzAwKSArICcuLi4nIDogb3ZlcnZpZXd9PC9oNj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2BodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC9vcmlnaW5hbC8ke2JhY2tkcm9wX3BhdGh9YH0gYWx0PVwiQ2FyZCBpbWFnZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHggYXV0bztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICAgICAgICAgICAgICBncmlkLWdhcDogMTVweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmNhcmQgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9XG5cbiAgICAgICAgICAgIDwvc3R5bGU+XG4gICAgICAgIDwvTGF5b3V0PlxuICAgIClcbn1cblxuU2hvd3MuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL3R2L3BvcHVsYXI/YXBpX2tleT0ke0FQSV9LRVl9Jmxhbmd1YWdlPWVuLVVTJnBhZ2U9MWApO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hvd0luZm86IGRhdGEucmVzdWx0c1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2hvd3M7Il19 */\\n/*@ sourceURL=/Users/andreifindrihan/FrontEnd/Next-JS-App/pages/shows.js */\"));\n};\n\nShows.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.themoviedb.org/3/tv/popular?api_key=\".concat(API_KEY, \"&language=en-US&page=1\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            showInfo: data.results\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Shows;","map":{"version":3,"sources":["/Users/andreifindrihan/FrontEnd/Next-JS-App/pages/shows.js"],"names":["Fetch","Layout","API_KEY","Movies","Shows","props","show","id","original_name","overview","backdrop_path","showInfo","map","length","substring","getInitialProps","fetch","res","json","data","results"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,cACoCC,IADpC;AAAA,MACXC,EADW,SACXA,EADW;AAAA,MACPC,aADO,SACPA,aADO;AAAA,MACQC,QADR,SACQA,QADR;AAAA,MACkBC,aADlB,SACkBA,aADlB;AAEnB,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,uCAAc,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA,uCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmB,UAAAN,IAAI;AAAA,WACpB;AAAK,MAAA,GAAG,EAAEC,EAAV;AAAA,yCAAwB,uBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,yCAAc,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BC,aAAa,CAACK,MAAd,GAAuB,EAAvB,GAA4BL,aAAa,CAACM,SAAd,CAAwB,CAAxB,EAA2B,EAA3B,IAAiC,KAA7D,GAAqEN,aAAlG,CADJ,EAEI;AAAA,yCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,yCAAc,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CC,QAAQ,CAACI,MAAT,GAAkB,GAAlB,GAAwBJ,QAAQ,CAACK,SAAT,CAAmB,CAAnB,EAAsB,GAAtB,IAA6B,KAArD,GAA6DL,QAAvG,CADJ,CAFJ,EAKI;AAAK,MAAA,GAAG,gDAAyCC,aAAzC,CAAR;AAAkE,MAAA,GAAG,EAAC,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADoB;AAAA,GAAvB,CADL,CAFJ;AAAA;AAAA;AAAA,qlGADJ;AAiCH,CAnCD;;AAqCAN,KAAK,CAACW,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFC,KAAK,2DAAoDd,OAApD,4BADH;;AAAA;AACde,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAAA,2CAIb;AACHR,YAAAA,QAAQ,EAAEQ,IAAI,CAACC;AADZ,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAehB,KAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport { API_KEY } from '../API_KEY';\nimport Movies from './movies';\n\nconst Shows = props => {\n    const { id, original_name, overview, backdrop_path } = show\n    return (\n        <Layout>\n            <h1 className=\"text-center\">TV Shows List!</h1>\n            <div className=\"grid\">\n                {props.showInfo.map(show => (\n                    <div key={id} className=\"card mb-3 text-center\">\n                        <h3 className=\"card-header\">{original_name.length > 18 ? original_name.substring(0, 18) + '...' : original_name}</h3>\n                        <div className=\"card-body\">\n                            <h6 className=\"card-subtitle text-muted\">{overview.length > 300 ? overview.substring(0, 300) + '...' : overview}</h6>\n                        </div>\n                        <img src={`https://image.tmdb.org/t/p/original/${backdrop_path}`} alt=\"Card image\" />\n                    </div>\n                ))}\n            </div>\n            <style jsx>{`\n                h1 {\n                    margin: 20px auto;\n                }\n                .grid {\n                    display: grid;\n                    grid-template-columns: 1fr 1fr 1fr;\n                    grid-gap: 15px;\n                }\n                .card img {\n                    height: 200px;\n                    width: 100%;\n                    display: block;\n                }\n            `}\n\n            </style>\n        </Layout>\n    )\n}\n\nShows.getInitialProps = async () => {\n    const res = await fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&page=1`);\n    const data = await res.json();\n\n    return {\n        showInfo: data.results\n    }\n}\n\nexport default Shows;"]},"metadata":{},"sourceType":"module"}